{"class":{"\\B7KP\\Controller\\Controller":[],"\\B7KP\\Controller\\DefaultController":[],"\\B7KP\\Controller\\ErrorController":[],"\\B7KP\\Controller\\LoginController":[],"\\B7KP\\Controller\\ProfileController":[],"\\B7KP\\Controller\\RegisterController":[],"\\B7KP\\Controller\\UserEditController":[],"\\B7KP\\Core\\App":[],"\\B7KP\\Core\\Crud":[],"\\B7KP\\Core\\Dao":[],"\\B7KP\\Entity\\Entity":[],"\\B7KP\\Entity\\User":[],"\\B7KP\\Form\\Form":[],"\\B7KP\\Form\\LoginForm":[],"\\B7KP\\Form\\RegisterForm":[],"\\B7KP\\Form\\UserEditForm":[],"\\B7KP\\Library\\AnnotationReader":[],"\\B7KP\\Library\\Assert":[],"\\B7KP\\Library\\Route":[],"\\B7KP\\Library\\Template":[],"\\B7KP\\Library\\Url":[],"\\B7KP\\Model\\Model":[],"\\B7KP\\Utils\\Cache":[],"\\B7KP\\Utils\\Functions":[],"\\B7KP\\Utils\\Login":[],"\\B7KP\\Utils\\Pass":[],"\\B7KP\\Utils\\PermissionCheck":[],"\\B7KP\\Utils\\UserSession":[],"\\LastFmApi\\Api\\AlbumApi":[],"\\LastFmApi\\Api\\ArtistApi":[],"\\LastFmApi\\Api\\AuthApi":[],"\\LastFmApi\\Api\\BaseApi":[],"\\LastFmApi\\Api\\GeoApi":[],"\\LastFmApi\\Api\\LibraryApi":[],"\\LastFmApi\\Api\\TagApi":[],"\\LastFmApi\\Api\\TrackApi":[],"\\LastFmApi\\Api\\UserApi":[],"\\LastFmApi\\Lib\\Cache":[],"\\LastFmApi\\Lib\\MySql":{"package base":true},"\\LastFmApi\\Lib\\MySqlResult":{"author Marcos Pe\u00f1":true},"\\LastFmApi\\Lib\\Socket":[],"\\LastFmApi\\Lib\\Sqlite":[],"\\LastFmApi\\Lib\\SqliteResult":{"author Marcos Pe\u00f1":true},"\\LastFmApi\\Main\\LastFm":[]},"property":{"\\B7KP\\Controller\\Controller":{"factory":[]},"\\B7KP\\Controller\\DefaultController":{"factory":[]},"\\B7KP\\Controller\\ErrorController":{"message":[],"factory":[]},"\\B7KP\\Controller\\LoginController":{"factory":[]},"\\B7KP\\Controller\\ProfileController":{"factory":[]},"\\B7KP\\Controller\\RegisterController":{"factory":[]},"\\B7KP\\Controller\\UserEditController":{"user":[],"factory":[]},"\\B7KP\\Core\\App":{"name":[],"author":[],"version":[],"environment":[],"db":[],"dbname":[],"host":[],"user":[],"password":[],"dsn":[],"loaded":[]},"\\B7KP\\Core\\Crud":{"error":[],"sql":[],"bind":[],"errorCallbackFunction":[],"errorMsgFormat":[]},"\\B7KP\\Core\\Dao":{"crud":[],"instance":[]},"\\B7KP\\Entity\\Entity":{"id":{"Assert":{"null":true}}},"\\B7KP\\Entity\\User":{"login":{"Assert":{"null":false,"alfanum":true,"max":20,"min":3,"unique":true,"lastfm":true,"different":["admin","adm","user","superuser"]}},"password":{"Assert":{"null":false,"max":20,"min":4,"notContainFields":"login"}},"email":{"Assert":{"null":false,"email":true,"unique":true}},"name":{"Assert":{"null":false}},"avatar":{"Assert":{"null":true}},"id":{"Assert":{"null":true}}},"\\B7KP\\Form\\Form":{"form":[],"obj":[]},"\\B7KP\\Form\\LoginForm":{"form":[],"obj":[]},"\\B7KP\\Form\\RegisterForm":{"form":[],"obj":[]},"\\B7KP\\Form\\UserEditForm":{"form":[],"obj":[]},"\\B7KP\\Library\\AnnotationReader":{"reflection":[],"scan":[],"usecache":[],"updated":[]},"\\B7KP\\Library\\Assert":{"asserts":[],"class":[],"data":[],"factory":[],"error":[]},"\\B7KP\\Library\\Route":{"routes":[],"specialRoutes":[]},"\\B7KP\\Library\\Template":{"dao":[],"factory":[]},"\\B7KP\\Library\\Url":[],"\\B7KP\\Model\\Model":{"dao":[]},"\\B7KP\\Utils\\Cache":[],"\\B7KP\\Utils\\Functions":[],"\\B7KP\\Utils\\Login":{"login":[],"password":[],"factory":[]},"\\B7KP\\Utils\\Pass":[],"\\B7KP\\Utils\\PermissionCheck":[],"\\B7KP\\Utils\\UserSession":[],"\\LastFmApi\\Api\\AlbumApi":{"error":[],"connected":[],"config":[],"auth":{"var array":true},"fullAuth":{"var boolean":true}},"\\LastFmApi\\Api\\ArtistApi":{"error":[],"connected":[],"config":[],"auth":{"var array":true},"fullAuth":{"var boolean":true}},"\\LastFmApi\\Api\\AuthApi":{"apiKey":{"access public":true,"var string":true},"secret":{"access public":true,"var string":true},"username":{"access public":true,"var string":true},"sessionKey":{"access public":true,"var string":true},"subscriber":{"access public":true,"var boolean":true},"token":{"access private":true,"var string":true}},"\\LastFmApi\\Api\\BaseApi":{"error":[],"connected":[],"host":[],"port":[],"response":[],"socket":[],"cache":[],"config":[],"auth":{"var array":true},"fullAuth":{"var boolean":true}},"\\LastFmApi\\Api\\GeoApi":{"error":[],"connected":[],"config":[],"auth":{"var array":true},"fullAuth":{"var boolean":true}},"\\LastFmApi\\Api\\LibraryApi":{"error":[],"connected":[],"config":[],"auth":{"var array":true},"fullAuth":{"var boolean":true}},"\\LastFmApi\\Api\\TagApi":{"error":[],"connected":[],"config":[],"auth":{"var array":true},"fullAuth":{"var boolean":true}},"\\LastFmApi\\Api\\TrackApi":{"error":[],"connected":[],"config":[],"auth":{"var array":true},"fullAuth":{"var boolean":true}},"\\LastFmApi\\Api\\UserApi":{"error":[],"connected":[],"config":[],"auth":{"var array":true},"fullAuth":{"var boolean":true}},"\\LastFmApi\\Lib\\Cache":{"db":{"var class":true},"type":{"var string":true},"error":{"var array":true},"path":{"var string":true},"cache_length":{"var integer":true},"config":{"var array":true},"enabled":{"var boolean":true}},"\\LastFmApi\\Lib\\MySql":{"host":{"var string":true},"dbUser":{"var string":true},"dbPass":{"var string":true},"dbName":{"var string":true},"dbConn":{"var boolean":true},"error":{"var array":true}},"\\LastFmApi\\Lib\\MySqlResult":{"mysql":{"var clas":true},"query":{"var clas":true}},"\\LastFmApi\\Lib\\Socket":{"handle":{"var class":true},"host":{"var string":true},"port":{"var integer":true},"error_string":{"var string":true},"error_number":{"var integer":true}},"\\LastFmApi\\Lib\\Sqlite":{"path":{"var string":true},"dbConn":{"var boolean":true},"error":{"var array":true}},"\\LastFmApi\\Lib\\SqliteResult":{"sqlite":{"var clas":true},"query":{"var clas":true}},"\\LastFmApi\\Main\\LastFm":{"apiKey":[],"sessionKey":[],"secret":[],"artistApi":[],"userName":[],"artists":[],"albums":[],"musics":[],"limit":[],"page":[]}},"method":{"\\B7KP\\Controller\\Controller":{"__construct":[],"checkAccess":[],"redirectToRoute":[],"redirectToUrl":[],"refresh":[],"render":[],"createForm":[],"isAjaxRequest":[]},"\\B7KP\\Controller\\DefaultController":{"__construct":[],"indexAction":{"Route":{"name":"home","route":"\/"}},"checkAccess":[],"redirectToRoute":[],"redirectToUrl":[],"refresh":[],"render":[],"createForm":[],"isAjaxRequest":[]},"\\B7KP\\Controller\\ErrorController":{"__construct":[],"pageNotFoundAction":{"Route":{"name":404,"route":"\/404"}},"unauthorizedAction":{"Route":{"name":403,"route":"\/403"}},"registerNotFoundAction":{"Route":{"name":"registernotfound","route":"\/404\/{entity}"}},"checkAccess":[],"redirectToRoute":[],"redirectToUrl":[],"refresh":[],"render":[],"createForm":[],"isAjaxRequest":[]},"\\B7KP\\Controller\\LoginController":{"__construct":[],"indexAction":{"Route":{"name":"login","route":"\/login"}},"checkLogin":{"Route":{"name":"check_login","route":"\/check\/login"}},"logout":{"Route":{"name":"logout","route":"\/logout"}},"checkAccess":[],"checkAssert":[],"redirectToRoute":[],"redirectToUrl":[],"refresh":[],"render":[],"createForm":[],"isAjaxRequest":[]},"\\B7KP\\Controller\\ProfileController":{"__construct":[],"profileAction":{"Route":{"name":"profile","route":"\/profile\/{login}"}},"indexAction":{"Route":{"name":"userprofile","route":"\/profile"}},"checkAccess":[],"redirectToRoute":[],"redirectToUrl":[],"refresh":[],"render":[],"createForm":[],"isAjaxRequest":[]},"\\B7KP\\Controller\\RegisterController":{"__construct":[],"indexAction":{"Route":{"name":"register","route":"\/register"}},"checkAccess":[],"checkRegister":{"Route":{"name":"check_register","route":"\/check\/register"}},"checkAssert":[],"redirectToRoute":[],"redirectToUrl":[],"refresh":[],"render":[],"createForm":[],"isAjaxRequest":[]},"\\B7KP\\Controller\\UserEditController":{"__construct":[],"indexAction":{"Route":{"name":"useredit","route":"\/edit"}},"checkAccess":[],"checkEdit":{"Route":{"name":"edit_profile","route":"\/check\/profile\/edit"}},"checkAssert":[],"redirectToRoute":[],"redirectToUrl":[],"refresh":[],"render":[],"createForm":[],"isAjaxRequest":[]},"\\B7KP\\Core\\App":{"__construct":[],"get":[],"setDsn":[],"load":[]},"\\B7KP\\Core\\Crud":{"__construct":[],"debug":[],"delete":[],"filter":[],"cleanup":[],"insert":[],"run":[],"select":[],"setErrorCallbackFunction":[],"update":[],"prepare":[],"beginTransaction":[],"commit":[],"rollBack":[],"inTransaction":[],"setAttribute":[],"exec":[],"query":[],"lastInsertId":[],"errorCode":[],"errorInfo":[],"getAttribute":[],"quote":[],"__wakeup":[],"__sleep":[],"getAvailableDrivers":[]},"\\B7KP\\Core\\Dao":{"setConn":[],"getConn":[],"create":[],"update":[],"select":[],"find":[],"findBy":[],"run":[],"searchDependencies":[],"delete":[]},"\\B7KP\\Entity\\Entity":{"__construct":[],"__get":[],"__set":[],"set":[],"setable":[],"fillData":[],"getAllAsArray":[],"filterDataToDb":[],"getTableName":[]},"\\B7KP\\Entity\\User":{"__construct":[],"permissionLevel":[],"__get":[],"__set":[],"set":[],"setable":[],"fillData":[],"getAllAsArray":[],"filterDataToDb":[],"getTableName":[]},"\\B7KP\\Form\\Form":{"__construct":[],"build":[],"output":[],"init":[],"end":[],"add":[],"input":[],"submit":[],"checkValue":[]},"\\B7KP\\Form\\LoginForm":{"__construct":[],"build":[],"output":[],"init":[],"end":[],"add":[],"input":[],"submit":[],"checkValue":[]},"\\B7KP\\Form\\RegisterForm":{"__construct":[],"build":[],"output":[],"init":[],"end":[],"add":[],"input":[],"submit":[],"checkValue":[]},"\\B7KP\\Form\\UserEditForm":{"__construct":[],"build":[],"output":[],"init":[],"end":[],"add":[],"input":[],"submit":[],"checkValue":[]},"\\B7KP\\Library\\AnnotationReader":{"__construct":[],"find":[],"scan":[],"findPHPFiles":[],"setClass":[],"getClassAnnotations":[],"getPropertiesAnnotations":[],"getMethodsAnnotations":[],"catchAnnotations":[],"parseAnnotation":[],"parseParams":[],"useCache":[],"loadCache":[],"saveCache":[],"parseToObject":[]},"\\B7KP\\Library\\Assert":{"__construct":[],"check":[],"addAssert":[],"validate":[],"getErrors":[],"null":[],"alfanum":[],"max":[],"min":[],"email":[],"unique":[],"int":[],"number":[],"maxNum":[],"minNum":[],"equal":[],"different":[],"contain":[],"notContain":[],"equalFields":[],"differentFields":[],"notContainFields":[],"lastfm":[]},"\\B7KP\\Library\\Route":{"findRoutes":[],"mapRoutes":[],"url":[],"routeExists":[],"specialRouteFix":[],"getClass":[],"getMethod":[],"getName":[],"getRouteParams":[],"isCurRoute":[]},"\\B7KP\\Library\\Template":{"__construct":[],"setFactory":[],"render":[]},"\\B7KP\\Library\\Url":{"getFullUrl":[],"getBaseUrl":[],"getRequest":[],"getParams":[],"getCurPage":[],"getCurSubPage":[],"asset":[],"checkPort":[],"changeUrl":[]},"\\B7KP\\Model\\Model":{"__construct":[],"add":[],"update":[],"remove":[],"findOneBy":[],"find":[],"findMtoM":[],"createUniqueObject":[],"createMultipleObjects":[]},"\\B7KP\\Utils\\Cache":{"__construct":[],"getJsonData":[],"setJsonData":[]},"\\B7KP\\Utils\\Functions":{"correctDate":[],"removeEmpty":[],"getStringBetween":[],"hasStringKeys":[],"convertStringToNumeric":[],"isJson":[],"arrayMaker":[]},"\\B7KP\\Utils\\Login":{"__construct":[],"login":[],"logout":[]},"\\B7KP\\Utils\\Pass":{"encrypt":[],"check":[]},"\\B7KP\\Utils\\PermissionCheck":{"__construct":[],"isPermitted":[],"permissionActions":[]},"\\B7KP\\Utils\\UserSession":{"__construct":[],"getUser":[]},"\\LastFmApi\\Api\\AlbumApi":{"addTags":{"param array $methodVars An array with the following required values: <i>album<\/i>, <i>artist<\/i>, <i>tags<\/i>":true,"return boolean":true},"getInfo":{"param array $methodVars An array with the following required values: <i>album<\/i> and optional values: <i>artist<\/i>, <i>mbid<\/i>":true,"return array":true},"getTags":{"param array $methodVars An array with the following required values: <i>album<\/i>, <i>artist<\/i>":true,"return array":true},"removeTag":{"param array $methodVars An array with the following required values: <i>album<\/i>, <i>artist<\/i>, <i>tag<\/i>":true,"return boolean":true},"search":{"param array $methodVars An array with the following required values: <i>album<\/i>":true,"return array":true},"__construct":[],"getFullAuth":{"return boolean":true},"getConfig":{"return array":true},"getAuth":{"return array":true},"getPackage":[],"setup":[],"process_response":[],"apiGetCall":[],"apiPostCall":[],"handleError":[],"apiSig":[]},"\\LastFmApi\\Api\\ArtistApi":{"addTags":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>tags<\/i>":true,"return boolean":true},"getEvents":{"deprecated as of march 15 2016, 'artist.getevents' service is not available":true,"param array $methodVars An array with the following required values: <i>artist<\/i>":true,"return array":true},"getImages":{"param array $methodVars An array with the following values: <i>artist<\/i> or <i>mbid<\/i>":true,"return array":true},"getInfo":{"param array $methodVars An array with the following values: <i>artist<\/i> or <i>mbid<\/i>":true,"return array":true},"getShouts":{"deprecated as of march 15 2016, 'artist.getshouts' service is not available":true,"param array $methodVars An array with the following required values: <i>artist<\/i>":true,"return array":true},"getSimilar":{"param array $methodVars An array with the following required value: <i>artist<\/i> and optional value: <i>limit<\/i>":true,"return array":true},"getTags":{"param array $methodVars An array with the following required values: <i>artist<\/i>":true,"return array":true},"getTopAlbums":{"param array $methodVars An array with the following required values: <i>artist<\/i> and optional value: <i>limit<\/i>, <i><\/i>":true,"return array":true},"getTopFans":{"deprecated as of march 15 2016, 'artist.gettopfans' service is not available":true,"param array $methodVars An array with the following required values: <i>artist<\/i>":true,"return array":true},"getTopTags":{"param array $methodVars An array with the following required values: <i>artist<\/i>":true,"return array":true},"getTopTracks":{"param array $methodVars An array with the following required values: <i>artist<\/i> and optional value: <i>limit<\/i>":true,"return array":true},"removeTag":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>tag<\/i>":true,"return boolean":true},"search":{"param array $methodVars An array with the following required value: <i>artist<\/i> and optional values: <i>limite<\/i>, <i>page<\/i>":true,"return array":true},"share":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>recipient<\/i> and optional values: <i>message<\/i>":true,"return boolean":true},"shout":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>message<\/i>":true,"return boolean":true},"__construct":[],"getFullAuth":{"return boolean":true},"getConfig":{"return array":true},"getAuth":{"return array":true},"getPackage":[],"setup":[],"process_response":[],"apiGetCall":[],"apiPostCall":[],"handleError":[],"apiSig":[]},"\\LastFmApi\\Api\\AuthApi":{"__construct":{"param string $method <i>getsession<\/i> to get a new session, <i>setsession<\/i> to set a current session":true,"param array $vars An array of variables to pass to the class":true,"return void":true,"access public":true},"getSession":{"return void":true,"access private":true},"getToken":{"return void":true,"access private":true}},"\\LastFmApi\\Api\\BaseApi":{"__construct":[],"getFullAuth":{"return boolean":true},"getConfig":{"return array":true},"getAuth":{"return array":true},"getPackage":[],"setup":[],"process_response":[],"apiGetCall":[],"apiPostCall":[],"handleError":[],"apiSig":[]},"\\LastFmApi\\Api\\GeoApi":{"getEvents":{"deprecated as of march 15 2016, 'geo.getevents' service is not available":true,"param array $methodVars An array with the following required values: <i>location<\/i> and optional values: <i>distance<\/i>, <i>page<\/i>":true,"return array":true},"getTopArtists":{"param array $methodVars An array with the following required values: <i>country<\/i> and optional value: <i>limit<\/i>":true,"return array":true},"getTopTracks":{"param array $methodVars An array with the following required values: <i>country<\/i> and optional value: <i>limit<\/i>, <i>location<\/i>, <i>page<\/i>":true,"return array":true},"__construct":[],"getFullAuth":{"return boolean":true},"getConfig":{"return array":true},"getAuth":{"return array":true},"getPackage":[],"setup":[],"process_response":[],"apiGetCall":[],"apiPostCall":[],"handleError":[],"apiSig":[]},"\\LastFmApi\\Api\\LibraryApi":{"addAlbum":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>album<\/i>":true,"return boolean":true},"addArtist":{"param array $methodVars An array with the following required values: <i>artist<\/i>":true,"return boolean":true},"addTrack":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>track<\/i>":true,"return boolean":true},"getAlbums":{"deprecated as of march 15 2016, 'library.getalbums' service is not available":true,"param array $methodVars An array with the following required values: <i>user<\/i> and optional values: <i>page<\/i>, <i>limit<\/i>":true,"return array":true},"getArtists":{"param array $methodVars An array with the following required values: <i>user<\/i> and optional values: <i>page<\/i>, <i>limit<\/i>":true,"return array":true},"getTracks":{"param array $methodVars An array with the following required values: <i>user<\/i> and optional values: <i>page<\/i>, <i>limit<\/i>":true,"return array":true},"__construct":[],"getFullAuth":{"return boolean":true},"getConfig":{"return array":true},"getAuth":{"return array":true},"getPackage":[],"setup":[],"process_response":[],"apiGetCall":[],"apiPostCall":[],"handleError":[],"apiSig":[]},"\\LastFmApi\\Api\\TagApi":{"getSimilar":{"param array $methodVars An array with the following required values: <i>tag<\/i>":true,"return array":true},"getTopAlbums":{"param array $methodVars An array with the following required values: <i>tag<\/i>":true,"return array":true},"getTopArtists":{"param array $methodVars An array with the following required values: <i>tag<\/i>":true,"return array":true},"getTopTags":{"return array":true},"getTopTracks":{"param array $methodVars An array with the following required values: <i>tag<\/i>":true,"return array":true},"getWeeklyArtistChart":{"deprecated as of march 15 2016, 'tag.getweeklyartistchar' method is not available":true,"param array $methodVars An array with the following required values: <i>tag<\/i> and optional values: <i>to<\/i>, <i>from<\/i>":true,"return array":true},"getWeeklyChartList":{"param array $methodVars An array with the following required values: <i>tag<\/i>":true,"return array":true},"search":{"deprecated as of march 15 2016, 'tag.search' method is not available":true,"param array $methodVars An array with the following required values: <i>tag<\/i>":true,"return array":true},"__construct":[],"getFullAuth":{"return boolean":true},"getConfig":{"return array":true},"getAuth":{"return array":true},"getPackage":[],"setup":[],"process_response":[],"apiGetCall":[],"apiPostCall":[],"handleError":[],"apiSig":[]},"\\LastFmApi\\Api\\TrackApi":{"addTags":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>track<\/i>, <i>tags<\/i>":true,"return boolean":true},"ban":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>track<\/i>":true,"return boolean":true},"getInfo":{"param array $methodVars An array with the following required values: <i>artist or mbid<\/i>, <i>track<\/i>":true,"return array":true},"getSimilar":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>track<\/i>":true,"return array":true},"getTags":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>track<\/i>":true,"return array":true},"getTopFans":{"deprecated as of march 15 2016, 'track.gettopfans' method is not available":true,"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>track<\/i>":true,"return array":true},"getTopTags":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>track<\/i>":true,"return array":true},"love":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>track<\/i>":true,"return boolean":true},"removeTag":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>track<\/i>, <i>tag<\/i>":true,"return boolean":true},"search":{"param array $methodVars An array with the following required values: <i>track<\/i>":true,"return array":true},"share":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>track<\/i>, <i>recipient<\/i> and optional value: <i>message<\/i>":true,"return boolean":true},"scrobble":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>track<\/i>, <i>recipient<\/i> and optional value: <i>message<\/i>":true,"return boolean":true},"updateNowPlaying":{"param array $methodVars An array with the following required values: <i>artist<\/i>, <i>track<\/i>, <i>recipient<\/i> and optional value: <i>message<\/i>":true,"return boolean":true},"__construct":[],"getFullAuth":{"return boolean":true},"getConfig":{"return array":true},"getAuth":{"return array":true},"getPackage":[],"setup":[],"process_response":[],"apiGetCall":[],"apiPostCall":[],"handleError":[],"apiSig":[]},"\\LastFmApi\\Api\\UserApi":{"getEvents":{"deprecated as of march 15 2016, 'user.getevents' method is not available":true,"param array $methodVars An array with the following required values: <i>user<\/i>":true,"return array":true},"getFriends":{"param array $methodVars An array with the following required values: <i>user<\/i>":true,"return array":true},"getInfo":{"param array $methodVars An array with the following required values: <i>user<\/i>":true,"return array":true},"getLovedTracks":{"param array $methodVars An array with the following required values: <i>user<\/i>":true,"return array":true},"getNeighbours":{"deprecated as of march 15 2016, 'user.getneighbours' method is not available":true,"param array $methodVars An array with the following required values: <i>user<\/i>":true,"return array":true},"getPastEvents":{"deprecated as of march 15 2016, 'user.getpastevents' method is not available":true,"param array $methodVars An array with the following required values: <i>user<\/i>":true,"return array":true},"getPlaylists":{"deprecated as of march 15 2016, 'user.getplaylists' method is not available":true,"param array $methodVars An array with the following required values: <i>user<\/i>":true,"return array":true},"getRecentTracks":{"param array $methodVars An array with the following required values: <i>user<\/i>":true,"return array":true},"getRecommendedArtists":{"deprecated as of march 15 2016, 'user.getrecommendedartists' method is not available":true,"param array $methodVars An array with the following optional values: <i>limit<\/i>, <i>page<\/i>":true,"return array":true},"getRecommendedEvents":{"deprecated as of march 15 2016, 'user.getrecommendedevents' method is not available":true,"param array $methodVars An array with the following optional values: <i>page<\/i>, <i>limit<\/i>":true,"return array":true},"getShouts":{"param array $methodVars An array with the following required values: <i>user<\/i>":true,"deprecated as of march 15 2016, 'user.getshouts' method is not available":true,"return array":true},"getTopAlbums":{"param array $methodVars An array with the following required values: <i>user<\/i> and optional value: <i>period<\/i>":true,"return array":true},"getTopArtists":{"param array $methodVars An array with the following required values: <i>user<\/i> and optional value: <i>period<\/i>":true,"return array":true},"getTopTags":{"param array $methodVars An array with the following required values: <i>user<\/i> and optional value: <i>limit<\/i>":true,"return array":true},"getTopTracks":{"param array $methodVars An array with the following required values: <i>user<\/i> and optional value: <i>period<\/i>":true,"return array":true},"getWeeklyAlbumChart":{"param array $methodVars An array with the following required values: <i>user<\/i> and optional values: <i>to<\/i>, <i>from<\/i>":true,"return array":true},"getWeeklyArtistChart":{"param array $methodVars An array with the following required values: <i>user<\/i> and optional values: <i>to<\/i>, <i>from<\/i>":true,"return array":true},"getWeeklyChartList":{"param array $methodVars An array with the following required values: <i>user<\/i>":true,"return array":true},"getWeeklyTrackChart":{"param array $methodVars An array with the following required values: <i>user<\/i> and optional values: <i>to<\/i>, <i>from<\/i>":true,"return array":true},"shout":{"param array $methodVars An array with the following required values: <i>user<\/i>, <i>message<\/i>":true,"return boolean":true},"__construct":[],"getFullAuth":{"return boolean":true},"getConfig":{"return array":true},"getAuth":{"return array":true},"getPackage":[],"setup":[],"process_response":[],"apiGetCall":[],"apiPostCall":[],"handleError":[],"apiSig":[]},"\\LastFmApi\\Lib\\Cache":{"__construct":{"param array $config The config array":true,"uses lastfmApiDatabase":true},"check_if_enabled":{"access private":true,"return void":true},"check_table_exists":{"access private":true,"return void":true},"create_table":{"access private":true,"return void":true},"get":{"access public":true,"param array $unique_vars Array of variables that are unique to this piece of cached data":true,"return string":true},"set":{"access public":true,"param array $unique_vars Array of variables that are unique to this piece of cached data":true,"param string $body The contents of the cache to put into the database":true,"return boolean":true},"del":{"access private":true,"param array $unique_vars Array of variables that are unique to this piece of cached data":true,"return boolean":true},"show_all":{"access private":true,"return boolean":true}},"\\LastFmApi\\Lib\\MySql":{"__construct":{"param string $host Database host address":true,"param string $dbUser Database username":true,"param string $dbPass Database password":true,"param string $dbName Database name":true,"return void":true},"connectToDb":{"return void":true},"handleError":{"return void":true},"query":{"param string $sql The SQL query to run":true,"return class":true,"uses lastfmApiDatabase_result":true}},"\\LastFmApi\\Lib\\MySqlResult":{"__construct":{"param class $mysql The mysql clas":true,"param class $query The quer":true,"return voi":true},"fetch":{"return arra":true},"fetchAll":{"return arra":true},"size":{"return intege":true}},"\\LastFmApi\\Lib\\Socket":{"__construct":{"param string $host The host name":true,"param integer $port The port number":true},"send":{"param string $msg Data to send":true,"param string $type The type of data to return ":{"array or string":true},"return string|array":true},"close":{"return boolean":true}},"\\LastFmApi\\Lib\\Sqlite":{"__construct":{"param string $path The path to the database":true,"return void":true},"connectToDb":{"return void":true},"query":{"param string $sql The SQL query to run":true,"return class":true,"uses lastfmApiDatabase_result":true}},"\\LastFmApi\\Lib\\SqliteResult":{"__construct":{"param class $sqlite The sqlite clas":true,"param class $query The quer":true,"return voi":true},"fetch":{"return arra":true},"fetchAll":{"return arra":true},"size":{"return intege":true}},"\\LastFmApi\\Main\\LastFm":{"__construct":[],"setUser":[],"setLimit":[],"setPage":[],"getUserInfo":[],"getUserTopArtist":[],"getArtistInfo":[],"loadLibrary":[],"loadArtists":[],"loadAlbums":[],"loadTracks":[],"getArtists":[],"findArtist":[],"findAlbum":[],"findTrack":[],"getBio":[]}}}